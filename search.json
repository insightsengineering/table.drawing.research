[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Table Drawing Research",
    "section": "",
    "text": "Overview\nTables built in {gtsummary} typically use {gt} functions to draw and render tables in different output formats. As a result, not all table customization translated correctly. This repo is used to experiment and identify potential adaptions to {gt} functions to maintain as much of the table decoration as possible when exporting to other formats. Currently exploring: HTML, PDF (with and without Typst), and Word (.docx) outputs.\nBelow is the sample {gtsummary} table with notable customizations (footnotes, headers, titles, linebreaks, indentations, etc.) we are tracking.\n\n\n\n\n\n  This is the caption\n[Used for cross referencing in Quarto]\n  \n    \n      This is the Title\nwith a linebreak1\n    \n    \n      This is the Subtitle2\n    \n    \n      \n      \n        Spanning Level 2\n      \n    \n    \n      Characteristic\n    Indented Header4\n      \n        Both Treatments\n      \n      \n        Spanning Level 13\n      \n    \n    \n      Overall\n      Drug A\nManual Line Break\n      Drug B\nManual Line Break\n    \n  \n  \n    Age\n  linebreak in a cell5\n47 (38, 57)\n46 (37, 60)\n48 (39, 56)\n          Unknown\n11\n7\n4\n    Grade\n\n\n\n      I\n68 (34%)\n35 (36%)\n33 (32%)\n      II\n68 (34%)\n32 (33%)\n36 (35%)\n      III\n64 (32%)\n31 (32%)\n33 (32%)\n          Unknown\n0\n0\n0\n  \n  \n    \n      This is Source Note 1\n    \n    \n      This is Source Note 2\n    \n    \n      Abbreviations: Q1 = First Quartile; Q3 = Third Quartile\n    \n  \n  \n    \n      1 Footnote in Title\n    \n    \n      2 Footnote in Subtitle\n    \n    \n      3 Footnote in Spanning Header\n    \n    \n      4 Footnote in Header\n    \n    \n      5 Footnote in Body\n    \n  \n\n\n\n\n\nIssue Log\nHere we document things that were discovered through this output analysis with date stamps that can be updated as feature requests are addressed.\n\n\n\n\n\n\n\n\nDate\nIssue\nResolved?\n\n\n\n\n2025-03-03\nNo caption in all .docx exports\n\n\n\n2025-03-03\nTitles in .docx output (using gtsave) are left-justified (not centered with the table)\n\n\n\n2025-03-03\nLinebreaks aren’t applied to “header” content in .docx output\n\n\n\n2025-03-03\n“Table 1” text is automatically added when not supplied a title (.docx)",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "10_tbl_too_wide.html",
    "href": "10_tbl_too_wide.html",
    "title": "Table Too Wide",
    "section": "",
    "text": "Testing what happens when the table is too wide (horizontal pagination)\n\n\nCode\nlibrary(gtsummary)\nlibrary(dplyr)\n\nset.seed(123)\ndata &lt;- tibble(\n  id = 1:100,\n  age = sample(18:90, 100, replace = TRUE),\n  sex = sample(c(\"Male\", \"Female\"), 100, replace = TRUE),\n  race = sample(c(\"White\", \"Black\", \"Asian\", \"Hispanic\"), 100, replace = TRUE),\n  bmi = round(runif(100, 18, 35), 1),\n  smoking_status = sample(c(\"Never\", \"Former\", \"Current\"), 100, replace = TRUE),\n  diabetes = sample(c(\"Yes\", \"No\"), 100, replace = TRUE),\n  hypertension = sample(c(\"Yes\", \"No\"), 100, replace = TRUE),\n  heart_disease = sample(c(\"Yes\", \"No\"), 100, replace = TRUE),\n  cancer = sample(c(\"Yes\", \"No\"), 100, replace = TRUE),\n  cholesterol = sample(c(\"Normal\", \"High\"), 100, replace = TRUE),\n  exercise_frequency = sample(0:7, 100, replace = TRUE),\n  alcohol_intake = sample(c(\"None\", \"Low\", \"Moderate\", \"High\"), 100, replace = TRUE),\n  family_history = sample(c(\"Yes\", \"No\"), 100, replace = TRUE),\n  education = sample(c(\"High School\", \"College\", \"Graduate\", \"Post-Grad\", \"Middle School\", \"Elementary School\", \"Pre School\", \"Kindergarten\"), 100, replace = TRUE),\n  marital_status = sample(c(\"Single\", \"Married\", \"Divorced\"), 100, replace = TRUE),\n  employment_status = sample(c(\"Employed\", \"Unemployed\", \"Retired\"), 100, replace = TRUE),\n  region = sample(c(\"North\", \"South\", \"East\", \"West\"), 100, replace = TRUE),\n  health_insurance = sample(c(\"Yes\", \"No\"), 100, replace = TRUE),\n  medication = sample(c(\"Yes\", \"No\"), 100, replace = TRUE),\n  visits_last_year = sample(0:10, 100, replace = TRUE),\n  satisfaction = sample(1:5, 100, replace = TRUE)\n)\n\n# Create a wide summary table\nsummary_table &lt;- data %&gt;%\n  tbl_summary(\n    by = education,\n    statistic = list(all_continuous() ~ \"{mean} ({sd})\", \n                     all_categorical() ~ \"{n} ({p}%)\"),\n    label = list(\n      age ~ \"Age (years)\",\n      bmi ~ \"BMI\",\n      smoking_status ~ \"Smoking Status\",\n      diabetes ~ \"Diabetes\",\n      hypertension ~ \"Hypertension\",\n      heart_disease ~ \"Heart Disease\",\n      cancer ~ \"Cancer\",\n      cholesterol ~ \"Cholesterol\",\n      exercise_frequency ~ \"Exercise Frequency (days/week)\",\n      alcohol_intake ~ \"Alcohol Intake\",\n      family_history ~ \"Family History\",\n      marital_status ~ \"Marital Status\",\n      employment_status ~ \"Employment Status\",\n      region ~ \"Region\",\n      health_insurance ~ \"Health Insurance\",\n      medication ~ \"On Medication\",\n      visits_last_year ~ \"Visits Last Year\",\n      satisfaction ~ \"Health Satisfaction (1-5)\"\n    )\n  ) %&gt;%\n  add_n() %&gt;%\n  modify_header(label = \"**Characteristic**\", estimate = \"**Mean (SD) or N (%)**\") %&gt;%\n  modify_table_styling(columns = everything()) %&gt;%\n  add_overall()  # This adds an overall column\n\n\n\ngt_save PDF\n\n\nCode\ngt::gtsave(as_gt(summary_table), filename = \"outputs/pdf/too_wide_gt_pdf.pdf\")\n\n\n\nPreview the Output\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\ntable cut off at the end of the page (portrait)\n\n\n\n\n\n\nrmarkdown rendered PDF\n\n\nCode\nsummary_table\n\n\n\nPreview the Output\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\ntable cut off at the end of the page (portrait)\n\n\n\n\n\n\ngt_save rendered word file\n\n\nCode\ngt::gtsave(as_gt(summary_table), filename = \"outputs/docx/too_wide_gt_word.docx\")\n# converting word to pdf locally \ndoconv::docx2pdf(\"outputs/docx/too_wide_gt_word.docx\")\n\n\n\nPreview the Output\n\n\n\n\n\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\ntable condensed (squished) to fit on the page (text wrapping within cells)\n\n\n\n\n\n\nquarto rendered word file\n\n\nCode\ngt_table\n# converting word to pdf locally \ndoconv::docx2pdf(\"outputs/docx/too_wide_qmd_word.docx\")\n\n\n\nPreview the Output\n\n\n\n\n\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\ntable condensed (squished) to fit on the page (text wrapping within cells)\n\n\n\n\n\n\nrmarkdown rendered word file\n\n\nCode\ngt_table\n# converting word to pdf locally \ndoconv::docx2pdf(\"outputs/docx/too_wide_rmd_word.docx\")\n\n\n\nPreview the Output\n\n\n\n\n\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\ntable condensed (squished) to fit on the page (text wrapping within cells)",
    "crumbs": [
      "Table Too Wide"
    ]
  },
  {
    "objectID": "08_text_styling.html",
    "href": "08_text_styling.html",
    "title": "Text Styling",
    "section": "",
    "text": "Code\nlibrary(gtsummary)\ntbl &lt;- gtsummary::tbl_summary(gtsummary::trial, by = trt, include = c(age, grade), missing = \"always\", label = list(age = \"Age\")) |&gt; add_overall()\n\ngt_table &lt;- tbl$table_body |&gt; \n  gt::gt(caption = gt::md(\"This is the caption  \\n[Used for cross referencing in Quarto]\")) |&gt; \n # Bold cells in table\n  gt::tab_style(\n    style = gt::cell_text(weight = \"bold\"), \n    locations = gt::cells_body(columns = \"label\", rows = c(1, 3))\n  ) \n\n\n\ngt_save PDF\n\n\nCode\ngt::gtsave(gt_table, filename = \"outputs/pdf/bold_gt_pdf.pdf\")\n\n\n\nPreview the Output\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\nno issues\n\n\n\n\n\n\nrmarkdown rendered PDF\n\n\nCode\ngt_table\n\n\n\nPreview the Output\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\nno issues\n\n\n\n\n\n\ngt_save rendered word file\n\n\nCode\ngt::gtsave(gt_table, filename = \"outputs/docx/bold_gt_word.docx\")\n# converting word to pdf locally \ndoconv::docx2pdf(\"outputs/docx/bold_gt_word.docx\")\n\n\n\nPreview the Output\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\nno issues\n\n\n\n\n\n\nquarto rendered word file\n\n\nCode\ngt_table\n# converting word to pdf locally \ndoconv::docx2pdf(\"outputs/docx/text_style_qmd_word.docx\")\n\n\n\nPreview the Output\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\nno issues\n\n\n\n\n\n\nrmarkdown rendered word file\n\n\nCode\ngt_table\n# converting word to pdf locally \ndoconv::docx2pdf(\"outputs/docx/text_style_rmd_word.docx\")\n\n\n\nPreview the Output\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\nno issues",
    "crumbs": [
      "Text Styling"
    ]
  },
  {
    "objectID": "06_titles.html",
    "href": "06_titles.html",
    "title": "Titles, Subtitles, and Captions",
    "section": "",
    "text": "Code\nlibrary(gtsummary)\n\ntbl &lt;- gtsummary::tbl_summary(gtsummary::trial, by = trt, include = c(age, grade), missing = \"always\", label = list(age = \"Age\")) |&gt; add_overall()\n\ngt_table &lt;- tbl$table_body |&gt; \n  gt::gt(caption = gt::md(\"This is the caption\")) |&gt; \n  gt::fmt_markdown(columns = label) |&gt; # need this to recognize the line break in the table body\n  gt::cols_hide(columns = c(variable, var_type, row_type, var_label)) |&gt; \n  gt::sub_missing(missing_text = \"\") |&gt; \n  # title, subtitle, and captions\n  gt::tab_header(gt::md(\"This is the Title\"), subtitle = \"This is the Subtitle\")\n\n\n\ngt_save PDF\n\n\nCode\ngt::gtsave(gt_table, filename = \"outputs/pdf/titles_gt_pdf.pdf\")\n\n\n\nPreview the Output\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\nno issues\n\n\n\n\n\n\nrmarkdown rendered PDF\n\n\nCode\ngt_table\n\n\n\nPreview the Output\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\nno issues\n\n\n\n\n\n\ngt_save rendered word file\n\n\nCode\ngt::gtsave(gt_table, filename = \"outputs/docx/titles_gt_word.docx\")\n# converting word to pdf locally \ndoconv::docx2pdf(\"outputs/docx/titles_gt_word.docx\")\n\n\n\nPreview the Output\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\nTitles present but right justified\n\n\n2\n06/19/2025\nno caption\n\n\n\n\n\n\nquarto rendered word file\n\n\nCode\ngt_table\n# converting word to pdf locally \ndoconv::docx2pdf(\"outputs/docx/titles_qmd_word.docx\")\n\n\n\nPreview the Output\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\nTitles present but right justified\n\n\n2\n06/19/2025\nno caption\n\n\n\n\n\n\nrmarkdown rendered word file\n\n\nCode\ngt_table\n# converting word to pdf locally \ndoconv::docx2pdf(\"outputs/docx/titles_rmd_word.docx\")\n\n\n\nPreview the Output\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\nTitles present but right justified\n\n\n2\n06/19/2025\nno caption",
    "crumbs": [
      "Titles"
    ]
  },
  {
    "objectID": "04_footnotes.html",
    "href": "04_footnotes.html",
    "title": "Footnotes",
    "section": "",
    "text": "Code\nlibrary(gtsummary)\n\ntbl &lt;- gtsummary::tbl_summary(gtsummary::trial, by = trt, include = c(age, grade), missing = \"always\", label = list(age = \"Age\")) |&gt; add_overall()\n\ngt_table &lt;- tbl$table_body |&gt; \n  gt::gt(caption = gt::md(\"This is the caption  \\n[Used for cross referencing in Quarto; but I don't think a footnote can be attached]\")) |&gt; \n  gt::sub_missing(missing_text = \"\") |&gt; \n  gt::tab_spanner(gt::md(\"**Spanning Level 1**\"), columns = gtsummary::all_stat_cols(FALSE), level = 1L, id = \"stat_1_L1\") |&gt;\n  # footnotes\n  gt::tab_footnote(\"Footnote in Header\", locations = gt::cells_column_labels(columns = label)) |&gt; \n  gt::tab_footnote(\"Footnote in Body\", locations = gt::cells_body(columns = label, row = 1L)) |&gt; \n  gt::tab_footnote(\"Footnote in Spanning Header\", locations = gt::cells_column_spanners(spanners = \"stat_1_L1\")) |&gt; \n  gt::tab_footnote(\"Footnote in Subtitle\", locations = gt::cells_title(\"subtitle\")) |&gt; \n  gt::tab_footnote(\"Footnote in Title\", locations = gt::cells_title(\"title\")) \n\n\n\ngt_save PDF\n\n\nCode\ngt::gtsave(gt_table, filename = \"outputs/pdf/footnotes_gt_pdf.pdf\")\n\n\n\nPreview the Output\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\nno issues\n\n\n\n\n\n\nrmarkdown rendered PDF\n\n\nCode\ngt_table\n\n\n\nPreview the Output\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\nno issues\n\n\n\n\n\n\ngt_save rendered word file\n\n\nCode\ngt::gtsave(gt_table, filename = \"outputs/docx/footnotes_gt_word.docx\")\n# converting word to pdf locally \ndoconv::docx2pdf(\"outputs/docx/footnotes_gt_word.docx\")\n\n\n\nPreview the Output\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\nno issues\n\n\n\n\n\n\nquarto rendered word file\n\n\nCode\ngt_table\n# converting word to pdf locally \ndoconv::docx2pdf(\"outputs/docx/footnotes_qmd_word.docx\")\n\n\n\nPreview the Output\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\nno issues\n\n\n\n\n\n\nrmarkdown rendered word file\n\n\nCode\ngt_table\n# converting word to pdf locally \ndoconv::docx2pdf(\"outputs/docx/footnotes_rmd_word.docx\")\n\n\n\nPreview the Output\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\nno issues",
    "crumbs": [
      "Footnotes"
    ]
  },
  {
    "objectID": "02_indentation.html",
    "href": "02_indentation.html",
    "title": "Indentation",
    "section": "",
    "text": "The example table evaluates Indentation.\n\n\nCode\nlibrary(gtsummary)\ntbl &lt;- gtsummary::tbl_summary(gtsummary::trial, by = trt, include = c(age, grade), missing = \"always\", label = list(age = \"Age\")) |&gt; add_overall()\n\ngt_table &lt;- tbl$table_body |&gt; \n  gt::gt(caption = gt::md(\"This is the caption\")) |&gt; \n  gt::fmt_markdown(columns = label) |&gt; \n  gt::cols_hide(columns = c(variable, var_type, row_type, var_label)) |&gt; \n  gt::sub_missing(missing_text = \"\") |&gt; \n  # Indentation\n  gt::text_transform(\n    locations = gt::cells_body(columns = label, rows = !row_type %in% \"label\"),\n    fn = function(x) paste0(strrep(\"\\U00A0\", times = 2), x)\n  ) |&gt; \n  gt::text_transform(\n    locations = gt::cells_body(columns = label, rows = row_type %in% \"missing\"),\n    fn = function(x) paste0(strrep(\"\\U00A0\", times = 4), x)\n  ) \n\n\n\ngt_save PDF\n\n\nCode\ngt::gtsave(gt_table, filename = \"outputs/pdf/indentations_gt_pdf.pdf\")\n\n\n\nPreview the Output\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\nno issues\n\n\n\n\n\n\nrmarkdown rendered PDF\n\n\nCode\ngt_table\n\n\n\nPreview the Output\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\nno issues\n\n\n\n\n\n\ngt_save rendered word file\n\n\nCode\ngt::gtsave(gt_table, filename = \"outputs/docx/indentation_gt_word.docx\")\n# converting word to pdf locally \ndoconv::docx2pdf(\"outputs/docx/indentation_gt_word.docx\")\n\n\n\nPreview the Output\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\ncell contents replaced with xml code\n\n\n\n\n\nCode\n# &lt;md_container&gt;&lt;w:p&gt;&lt;w:pPr&gt;&lt;/w:pPr&gt;&lt;w:r&gt;&lt;w:rPr&gt;&lt;/w:rPr&gt;&lt;w:t xml:space=\"preserve\"&gt;Unknown&lt;/w:t&gt;&lt;/w:r&gt;&lt;/w:p&gt;&lt;/md_container&gt;\n\n\n\n\n\nquarto rendered word file\n\n\nCode\ngt_table\n# converting word to pdf locally \ndoconv::docx2pdf(\"outputs/docx/indentation_qmd_word.docx\")\n\n\n\nPreview the Output\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\nNo indentation applied\n\n\n\n\n\n\nrmarkdown rendered word file\n\n\nCode\ngt_table\n# converting word to pdf locally \ndoconv::docx2pdf(\"outputs/docx/indentation_rmd_word.docx\")\n\n\n\nPreview the Output\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\ncell contents replaced with xml code",
    "crumbs": [
      "Indentation"
    ]
  },
  {
    "objectID": "01_line_breaks.html",
    "href": "01_line_breaks.html",
    "title": "Line Breaks",
    "section": "",
    "text": "Line breaks not being rendered correctly in a PDF is a known issue. We will skip the quarto rendered PDF and evaluate the line break behavior in other output options.\nThe example table evaluates line breaks in:\n\nTitle\nColumn Headers\nTable Headers\nCells\n\n\n\nCode\nlibrary(gtsummary)\ntbl &lt;- gtsummary::tbl_summary(gtsummary::trial, by = trt, include = c(age, grade), missing = \"always\", label = list(age = \"Age  \\n\\U00A0\\U00A0linebreak in a cell\")) |&gt; add_overall()\ngt_table &lt;- tbl$table_body |&gt; \n  gt::gt(caption = gt::md(\"This is the caption  \\n[Used for cross referencing in Quarto]\")) |&gt; \n  gt::fmt_markdown(columns = label) |&gt; # need this to recognize the line break in the table body\n  # Column headers with line breaks\n  gt::cols_label(\n    stat_0 = gt::md(\"**Overall**\"),\n    stat_1 = gt::md(\"**Drug A**  \\nManual Line Break\"), \n    stat_2 = gt::md(\"**Drug B**  \\nManual Line Break\")\n  ) |&gt; \n  gt::tab_header(gt::md(\"This is the Title  \\nwith a linebreak\"), subtitle = \"This is the Subtitle\")\n\n\n\ngt_save PDF\n\n\nCode\ngt::gtsave(gt_table, filename = \"outputs/pdf/linebreaks_gt_pdf2.pdf\")\n\n\n\nPreview the Output\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\nmanual linebreaks work\n\n\n2\n06/19/2025\ntitle linebreaks work\n\n\n3\n06/19/2025\nlinebreaks in a cell works\n\n\n\n\n\n\nrmarkdown rendered PDF\n\n\nCode\ngt_table\n\n\n\nPreview the Output\n\n\n\n\n\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\ntitle linebreaks work\n\n\n2\n06/19/2025\nmanual linebreak works but disrupts cell alignment\n\n\n3\n06/19/2025\nlinebreak in a cell doesn’t work\n\n\n\n\n\n\ngt_save rendered word file\n\n\nCode\ngt::gtsave(gt_table, filename = \"outputs/docx/linebreaks_gt_word.docx\")\n# converting word to pdf locally \ndoconv::docx2pdf(\"outputs/docx/linebreaks_gt_word.docx\")\n\n\n\nPreview the Output\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\ntitle linebreak not working\n\n\n2\n06/19/2025\ncell linebreak not working\n\n\n3\n06/19/2025\nmanual linebreaks work\n\n\n\n\n\n\nquarto rendered word file\n\n\nCode\ngt_table\n# converting word to pdf locally \ndoconv::docx2pdf(\"outputs/docx/linebreaks_qmd_word.docx\")\n\n\n\nPreview the Output\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\ntitle linebreak not working\n\n\n2\n06/19/2025\ncell linebreak not working\n\n\n3\n06/19/2025\nmanual linebreaks work\n\n\n\n\n\n\nrmarkdown rendered word file\n\n\nCode\ngt_table\n# converting word to pdf locally \ndoconv::docx2pdf(\"outputs/docx/linebreaks_rmd_word.docx\")\n\n\n\nPreview the Output\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\ntitle linebreak not working\n\n\n2\n06/19/2025\ncell linebreak not working\n\n\n3\n06/19/2025\nmanual linebreaks work",
    "crumbs": [
      "Line Breaks"
    ]
  },
  {
    "objectID": "03_spanning_header.html",
    "href": "03_spanning_header.html",
    "title": "Spanning Header",
    "section": "",
    "text": "Code\nlibrary(gtsummary)\n\ntbl &lt;- gtsummary::tbl_summary(gtsummary::trial, by = trt, include = c(age, grade), missing = \"always\", label = list(age = \"Age\")) |&gt; add_overall()\n\ngt_table &lt;- tbl$table_body |&gt; \n  gt::gt(caption = gt::md(\"This is the caption\")) |&gt; \n  gt::fmt_markdown(columns = label) |&gt; # need this to recognize the line break in the table body\n  gt::cols_hide(columns = c(variable, var_type, row_type, var_label)) |&gt; \n  gt::sub_missing(missing_text = \"\") |&gt; \n  # spanning headers 1 and 2 levels\n  gt::tab_spanner(gt::md(\"**Spanning Level 2**\"), columns = gtsummary::all_stat_cols(), level = 2L, id = \"stat_1_L2\") |&gt; \n  gt::tab_spanner(gt::md(\"**Spanning Level 1**\"), columns = gtsummary::all_stat_cols(FALSE), level = 1L, id = \"stat_1_L1\") |&gt; \n  gt::tab_spanner(gt::md(\"**Both Treatments**\"), columns = stat_0, level = 1L, id = \"stat_0_L1\") \n\n\n\ngt_save PDF\n\n\nCode\ngt::gtsave(gt_table, filename = \"outputs/pdf/spanning_header_gt_pdf.pdf\")\n\n\n\nPreview the Output\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\nno issues\n\n\n\n\n\n\nrmarkdown rendered PDF\n\n\nCode\ngt_table\n\n\n\nPreview the Output\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\nno issues\n\n\n\n\n\n\ngt_save rendered word file\n\n\nCode\ngt::gtsave(gt_table, filename = \"outputs/docx/spanning_header_gt_word.docx\")\n# converting word to pdf locally \ndoconv::docx2pdf(\"outputs/docx/spanning_header_gt_word.docx\")\n\n\n\nPreview the Output\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\nno issues\n\n\n\n\n\n\nquarto rendered word file\n\n\nCode\ngt_table\n# converting word to pdf locally \ndoconv::docx2pdf(\"outputs/docx/spanning_header_qmd_word.docx\")\n\n\n\nPreview the Output\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\nno issues\n\n\n\n\n\n\nrmarkdown rendered word file\n\n\nCode\ngt_table\n# converting word to pdf locally \ndoconv::docx2pdf(\"outputs/docx/spanning_header_rmd_word.docx\")\n\n\n\nPreview the Output\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\nno issues",
    "crumbs": [
      "Spanning Header"
    ]
  },
  {
    "objectID": "05_source_notes.html",
    "href": "05_source_notes.html",
    "title": "Source Notes",
    "section": "",
    "text": "Code\nlibrary(gtsummary)\n\ntbl &lt;- gtsummary::tbl_summary(gtsummary::trial, by = trt, include = c(age, grade), missing = \"always\", label = list(age = \"Age\")) |&gt; add_overall()\n\ngt_table &lt;- tbl$table_body |&gt; \n  gt::gt(caption = gt::md(\"This is the caption\")) |&gt; \n  #source notes\n  gt::tab_source_note(\"This is Source Note 1\") |&gt; \n  gt::tab_source_note(\"This is Source Note 2\") |&gt; \n  gt::tab_source_note(\"Abbreviations: Q1 = First Quartile; Q3 = Third Quartile\")\n\n\n\ngt_save PDF\n\n\nCode\ngt::gtsave(gt_table, filename = \"outputs/pdf/source_notes_gt_pdf.pdf\")\n\n\n\nPreview the Output\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\nno issues\n\n\n\n\n\n\nrmarkdown rendered PDF\n\n\nCode\ngt_table\n\n\n\nPreview the Output\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\nno issues\n\n\n\n\n\n\ngt_save rendered word file\n\n\nCode\ngt::gtsave(gt_table, filename = \"outputs/docx/source_notes_gt_word.docx\")\n# converting word to pdf locally \ndoconv::docx2pdf(\"outputs/docx/source_notes_gt_word.docx\")\n\n\n\nPreview the Output\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\nno issues\n\n\n\n\n\n\nquarto rendered word file\n\n\nCode\ngt_table\n# converting word to pdf locally \ndoconv::docx2pdf(\"outputs/docx/source_notes_qmd_word.docx\")\n\n\n\nPreview the Output\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\nno issues\n\n\n\n\n\n\nrmarkdown rendered word file\n\n\nCode\ngt_table\n# converting word to pdf locally \ndoconv::docx2pdf(\"outputs/docx/source_notes_rmd_word.docx\")\n\n\n\nPreview the Output\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\nno issues",
    "crumbs": [
      "Source Notes"
    ]
  },
  {
    "objectID": "07_alignment.html",
    "href": "07_alignment.html",
    "title": "Alignment",
    "section": "",
    "text": "Code\nlibrary(gtsummary)\ntbl &lt;- gtsummary::tbl_summary(gtsummary::trial, by = trt, include = c(age, grade), missing = \"always\", label = list(age = \"Age\")) |&gt; add_overall()\n\ngt_table &lt;- tbl$table_body |&gt; \n  gt::gt(caption = gt::md(\"This is the caption  \\n[Used for cross referencing in Quarto]\")) |&gt; \n  gt::cols_align(columns = c(stat_1, stat_2), align = \"right\") |&gt; \n  gt::cols_align(columns = c(variable, var_type), align = \"center\") |&gt;\n  gt::cols_align(columns = c(row_type, var_label), align = \"left\")\n\n\n\ngt_save PDF\n\n\nCode\ngt::gtsave(gt_table, filename = \"outputs/pdf/alignment_gt_pdf.pdf\")\n\n\n\nPreview the Output\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\nno issues\n\n\n\n\n\n\nrmarkdown rendered PDF\n\n\nCode\ngt_table\n\n\n\nPreview the Output\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\nno issues\n\n\n\n\n\n\ngt_save rendered word file\n\n\nCode\ngt::gtsave(gt_table, filename = \"outputs/docx/alignment_gt_word.docx\")\n# converting word to pdf locally \ndoconv::docx2pdf(\"outputs/docx/alignment_gt_word.docx\")\n\n\n\nPreview the Output\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\nno issues\n\n\n\n\n\n\nquarto rendered word file\n\n\nCode\ngt_table\n# converting word to pdf locally \ndoconv::docx2pdf(\"outputs/docx/alignment_qmd_word.docx\")\n\n\n\nPreview the Output\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\nno issues\n\n\n\n\n\n\nrmarkdown rendered word file\n\n\nCode\ngt_table\n# converting word to pdf locally \ndoconv::docx2pdf(\"outputs/docx/alignment_rmd_word.docx\")\n\n\n\nPreview the Output\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\nno issues",
    "crumbs": [
      "Alignment"
    ]
  },
  {
    "objectID": "09_tbl_too_long.html",
    "href": "09_tbl_too_long.html",
    "title": "Table Too Long",
    "section": "",
    "text": "Testing when the table is too long to fit on the page (vertical pagination).\n\n\nCode\nlibrary(gtsummary)\nlibrary(dplyr)\n\nset.seed(123)\ndata &lt;- dplyr::tibble(\n  id = 1:100,\n  age = sample(18:90, 100, replace = TRUE),\n  sex = sample(c(\"Male\", \"Female\"), 100, replace = TRUE),\n  race = sample(c(\"White\", \"Black\", \"Asian\", \"Hispanic\"), 100, replace = TRUE),\n  bmi = round(runif(100, 18, 35), 1),\n  smoking_status = sample(c(\"Never\", \"Former\", \"Current\"), 100, replace = TRUE),\n  diabetes = sample(c(\"Yes\", \"No\"), 100, replace = TRUE),\n  hypertension = sample(c(\"Yes\", \"No\"), 100, replace = TRUE),\n  heart_disease = sample(c(\"Yes\", \"No\"), 100, replace = TRUE),\n  cancer = sample(c(\"Yes\", \"No\"), 100, replace = TRUE),\n  cholesterol = sample(c(\"Normal\", \"High\"), 100, replace = TRUE),\n  exercise_frequency = sample(0:7, 100, replace = TRUE),\n  alcohol_intake = sample(c(\"None\", \"Low\", \"Moderate\", \"High\"), 100, replace = TRUE),\n  family_history = sample(c(\"Yes\", \"No\"), 100, replace = TRUE),\n  education = sample(c(\"High School\", \"College\", \"Graduate\"), 100, replace = TRUE),\n  marital_status = sample(c(\"Single\", \"Married\", \"Divorced\"), 100, replace = TRUE),\n  employment_status = sample(c(\"Employed\", \"Unemployed\", \"Retired\"), 100, replace = TRUE),\n  region = sample(c(\"North\", \"South\", \"East\", \"West\"), 100, replace = TRUE),\n  health_insurance = sample(c(\"Yes\", \"No\"), 100, replace = TRUE),\n  medication = sample(c(\"Yes\", \"No\"), 100, replace = TRUE),\n  visits_last_year = sample(0:10, 100, replace = TRUE),\n  satisfaction = sample(1:5, 100, replace = TRUE)\n)\n\n# Create summary table\nsummary_table &lt;- data %&gt;%\n  tbl_summary(\n    by = sex,  # Group by sex\n    statistic = list(all_continuous() ~ \"{mean} ({sd})\", all_categorical() ~ \"{n} ({p}%)\"),\n    label = list(\n      age ~ \"Age (years)\",\n      bmi ~ \"BMI\",\n      smoking_status ~ \"Smoking Status\",\n      diabetes ~ \"Diabetes\",\n      hypertension ~ \"Hypertension\",\n      heart_disease ~ \"Heart Disease\",\n      cancer ~ \"Cancer\",\n      cholesterol ~ \"Cholesterol\",\n      exercise_frequency ~ \"Exercise Frequency (days/week)\",\n      alcohol_intake ~ \"Alcohol Intake\",\n      family_history ~ \"Family History\",\n      education ~ \"Education Level\",\n      marital_status ~ \"Marital Status\",\n      employment_status ~ \"Employment Status\",\n      region ~ \"Region\",\n      health_insurance ~ \"Health Insurance\",\n      medication ~ \"On Medication\",\n      visits_last_year ~ \"Visits Last Year\",\n      satisfaction ~ \"Health Satisfaction (1-5)\"\n    )\n  ) %&gt;%\n  add_n() %&gt;%\n  modify_header(label = \"**Characteristic**\", estimate = \"**Mean (SD) or N (%)**\") %&gt;%\n  modify_table_styling(columns = everything())\n\n\n\ngt_save PDF\n\n\nCode\ngt::gtsave(as_gt(summary_table), filename = \"outputs/pdf/too_long_gt_pdf.pdf\")\n\n\n\nPreview the Output\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\nprinted on multiple pages\n\n\n2\n06/19/2025\nheader and footnotes repeated on each page\n\n\n\n\n\n\nrmarkdown rendered PDF\n\n\nCode\ngt_table\n\n\n\nPreview the Output\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\nprinted on one page\n\n\n2\n06/19/2025\ntable cut off at the end of the page\n\n\n\n\n\n\ngt_save rendered word file\n\n\nCode\ngt::gtsave(as_gt(summary_table), filename = \"outputs/docx/too_long_gt_word.docx\")\n# converting word to pdf locally \ndoconv::docx2pdf(\"outputs/docx/too_long_gt_word.docx\")\n\n\n\nPreview the Output\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\nprinted on multiple pages (continued)\n\n\n2\n06/19/2025\nheader repeated on each page\n\n\n3\n01/19/2025\nfooter only on the last page\n\n\n\n\n\n\nquarto rendered word file\n\n\nCode\ngt_table\n# converting word to pdf locally \ndoconv::docx2pdf(\"outputs/docx/too_long_qmd_word.docx\")\n\n\n\nPreview the Output\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\nprinted on multiple pages (continued)\n\n\n2\n06/19/2025\nheader repeated on each page\n\n\n3\n01/19/2025\nfooter only on the last page\n\n\n\n\n\n\nrmarkdown rendered word file\n\n\nCode\ngt_table\n# converting word to pdf locally \ndoconv::docx2pdf(\"outputs/docx/too_long_rmd_word.docx\")\n\n\n\nPreview the Output\n\n\n\n\n\nDate\nFinding\n\n\n\n\n1\n06/19/2025\nprinted on multiple pages (continued)\n\n\n2\n06/19/2025\nheader repeated on each page\n\n\n3\n01/19/2025\nfooter only on the last page",
    "crumbs": [
      "Table Too Long"
    ]
  },
  {
    "objectID": "11_other_engines.html",
    "href": "11_other_engines.html",
    "title": "Output Engines Experimentation",
    "section": "",
    "text": "Other table output options were experimented with but did not carry forward as the outputs did not render correctly. Below are the results of a few engines tried.",
    "crumbs": [
      "Other Engines"
    ]
  },
  {
    "objectID": "11_other_engines.html#typst-pdf",
    "href": "11_other_engines.html#typst-pdf",
    "title": "Output Engines Experimentation",
    "section": "Typst PDF",
    "text": "Typst PDF\n\n\nCode\nlibrary(gtsummary)\ntbl &lt;- gtsummary::tbl_summary(gtsummary::trial, by = trt, include = c(age, grade), missing = \"always\", label = list(age = \"Age  \\n\\U00A0\\U00A0linebreak in a cell\")) |&gt; add_overall()\ngt_table &lt;- tbl$table_body |&gt; \n  gt::gt(caption = gt::md(\"This is the caption  \\n[Used for cross referencing in Quarto]\")) |&gt; \n  gt::fmt_markdown(columns = label) |&gt; # need this to recognize the line break in the table body\n  # Column headers with line breaks\n  gt::cols_label(\n    stat_0 = gt::md(\"**Overall**\"),\n    stat_1 = gt::md(\"**Drug A**  \\nManual Line Break\"), \n    stat_2 = gt::md(\"**Drug B**  \\nManual Line Break\")\n  ) |&gt; \n  gt::tab_header(gt::md(\"This is the Title  \\nwith a linebreak\"), subtitle = \"This is the Subtitle\")\n\ngt_table\n\n\n\nPreview the Output\n\n{{&lt; pdf outputs/quarto_typst.pdf width=100% height=800 &gt;}}",
    "crumbs": [
      "Other Engines"
    ]
  }
]